#!/usr/bin/env perl
use warnings;
use strict;

use FindBin qw($Bin);
use lib $Bin;
use x3dna_utils;

my $err_cmd = 0;
my $opt;

if ( @ARGV == 0 ) {
    $opt = 9;    # all common files
} elsif ( @ARGV == 1 ) {
    my $fopt = uc( $ARGV[0] );
    if ( $fopt =~ /-X/ ) {    # blocview
        $opt = 1;
    } elsif ( $fopt =~ /-N/ ) {    # nmr_ensemble
        $opt = 2;
    } else {
        $err_cmd = 1;
    }
} else {
    $err_cmd = 1;
}

if ($err_cmd) {
    print <<"DCMNFILE_USAGE";
===========================================================================
SYNOPSIS
    dcmnfile [-x|-n]
DESCRIPTION
    Deletes common files (e.g., stacking.pdb, bp_step.par) generated by
    various 3DNA programs.
AUTHOR
    $author
    $url
===========================================================================
DCMNFILE_USAGE
    die "\n";
}

my @blocview = qw(
    t.pdb  temp   temp2  temp.msc  t2.r3d
    tb.pdb t0.r3d t1.r3d tb_c.pdb
    t3.r3d t4.r3d t5.r3d t.r3d
    t.avs  t.png  t.jpg  rotxyz.ang
    x3dna_r3d_pymol.pml x3dna_r3d_pymol.png x3dna_r3d.avs
    x3dna_r3d_pymol.msg x3dna_r3d.msg
    );

my @nmr_ensemble = qw(
    str_selected best_str xnmr_tmp.pdb xnmr0_tmp.pdb tnmr.pdb
    msg_out nmr_all.r3d best_rotmat.dat @blocview
    );

my @cmnfiles = qw(
    ref_frames.dat  mref_frames.dat
    poc_haxis.r3d   multiplets.pdb
    allpairs.pdb    bestpairs.pdb
    stacking.pdb    hstacking.pdb
    hel_regions.pdb bp_order.dat
    col_chains.scr  col_helices.scr
    auxiliary.par   bp_step.par
    bp_helical.par  cf_7methods.par
    hbonds_info.dat bonds_lkg.dat
    serial_num.pdb  atom_lkg.alc
    bblk_lkg.alc    pblk_lkg.alc
    tmp_file        mulbp.inp
    rotmat.dat      pmiview1
    pmiview2        pmiview3
    @nmr_ensemble
    );

my @delfiles;
if ( $opt == 1 ) {
    @delfiles = @blocview;
} elsif ( $opt == 2 ) {
    @delfiles = @nmr_ensemble;
} else {
    @delfiles = @cmnfiles;
}

foreach my $file (@delfiles) {
    if ( -e $file ) {
        unlink $file or warn "Can't delete $file: $!\n";
    }
}
